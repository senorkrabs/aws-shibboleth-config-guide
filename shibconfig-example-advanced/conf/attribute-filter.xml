<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Example policy file that shows attribute filter examples for samltest.id (for testing SAML IdPs and SPs),
    AWS Console, AppStream, and Cognito User Pools
-->
<AttributeFilterPolicyGroup id="ShibbolethFilterPolicy"
        xmlns="urn:mace:shibboleth:2.0:afp"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="urn:mace:shibboleth:2.0:afp http://shibboleth.net/schema/idp/shibboleth-afp.xsd">

    <!--
    Example rule that returns many attributes to samltest.id and Cognito. Note that Cognito's EntityId will be 
    based on the User Pool id (urn::amazon:cognito:sp:[user_pool_id])
    -->

	<AttributeFilterPolicy id="standardRelease">
	   <PolicyRequirementRule xsi:type="OR">
	       <Rule xsi:type="Requester" value="https://samltest.id/saml/sp" />
	       <Rule xsi:type="Requester" value="urn:amazon:cognito:sp:us-east-1_AAAAAA" />
           <Rule xsi:type="Requester" value="https://us-east-1.signin.aws.amazon.com/platform/saml/d-1234567" />
	   </PolicyRequirementRule> 
	    <AttributeRule attributeID="userPrincipalName">
	        <PermitValueRule xsi:type="ANY" />
	    </AttributeRule>	   	   
	    <AttributeRule attributeID="uid">
	        <PermitValueRule xsi:type="ANY" />
	    </AttributeRule>	 
	    <AttributeRule attributeID="displayName">
	        <PermitValueRule xsi:type="ANY" />
	    </AttributeRule>	    	    
	    <AttributeRule attributeID="givenName">
	        <PermitValueRule xsi:type="ANY" />
	    </AttributeRule>	 
        <AttributeRule attributeID="surname">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="displayName">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>	    
	    <AttributeRule attributeID="mail">
	        <PermitValueRule xsi:type="ANY" />
	    </AttributeRule>
        <AttributeRule attributeID="eduPersonPrincipalName">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>
        <AttributeRule attributeID="eduPersonScopedAffiliation">
            <PermitValueRule xsi:type="ANY" />
        </AttributeRule>	    
	    <AttributeRule attributeID="sAMAccountName">
	        <PermitValueRule xsi:type="ANY" />
	    </AttributeRule>	 	   
	    <AttributeRule attributeID="userPrincipalName">
	        <PermitValueRule xsi:type="ANY" />
	    </AttributeRule>	 
	</AttributeFilterPolicy>


    <!-- 
    These are the attributes released to AWS for console access. 
    
    IMPORTANT: Only roles whose names begin with "AWS-" will be included! This is to filter out AppStream roles.
    
    https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml_assertions.html
    
    --> 
    <AttributeFilterPolicy id="releaseAWSToAWS">
        <PolicyRequirementRule xsi:type="Requester" value="urn:amazon:webservices"/>
        <AttributeRule attributeID="awsRoles">
            <PermitValueRule xsi:type="ValueRegex" regex="arn\:aws\:iam\:\:\d{12}\:role\/AWS-.*"/>
        </AttributeRule>
        <AttributeRule attributeID="awsRoleSessionName">
            <PermitValueRule xsi:type="ANY"/>
        </AttributeRule>
	    <AttributeRule attributeID="userPrincipalName">
	        <PermitValueRule xsi:type="ANY" />
	    </AttributeRule>	         
    </AttributeFilterPolicy>

<!-- 
    These are the attributes released to AWS for AppStream. This has been separated out so that AppStream users that are
    also part of AWS groups can bypass the role selection screen and go straight to their session. Why? Because if only one 
    role is returned in the SAML response, the AWS SP automatically skips the role selection page and forwards the request to the 
    console and/or AppStream. If a user is part of multiple "AppStream-" groups, they will still be presented with the role 
    selection screen. Try to assign users to a single group and role if possible.
    
    IMPORTANT: Only roles whose names begin with "AppStream-" will be included! This is to filter out roles intended for console use.
    
    IMPORTANT: This filter appies if the requester's EntityId is urn:amazon:appstream. This is a fictitious SP. Create a copy of the 
    aws metadata file, change the EntityId field to urn:amazon:appstream and update metadata-providers.xml to include it. Also be sure
    to include it in relying-party.xml.
    
    https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml_assertions.html
    
    https://docs.aws.amazon.com/appstream2/latest/developerguide/external-identity-providers-setting-up-saml.html#external-identity-providers-create-assertions
    --> 
    <AttributeFilterPolicy id="releaseAWSToAppstream">
        <PolicyRequirementRule xsi:type="Requester" value="urn:amazon:appstream"/>
        <AttributeRule attributeID="awsRoles">
            <PermitValueRule xsi:type="ValueRegex" regex="arn\:aws\:iam\:\:\d{12}\:role\/AppStream-.*"/>
        </AttributeRule>
        <AttributeRule attributeID="awsRoleSessionName">
            <PermitValueRule xsi:type="ANY"/>
        </AttributeRule>
	    <AttributeRule attributeID="userPrincipalName">
	        <PermitValueRule xsi:type="ANY" />
	    </AttributeRule>	         
    </AttributeFilterPolicy>

</AttributeFilterPolicyGroup>
